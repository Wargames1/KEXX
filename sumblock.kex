******************************************************************************
* SUMBLOCK.KEX - MDG - 6/1/96 Sum the numbers in a marked box block          *
*                             Ignores rows containing non-numeric data.      *
*                                                                            *
* Usage:  Best when assigned to a key 'define a-s "macro sumblock"'          *
*         Mark the box block containing numbers to sum using Alt-B twice.    *
*         Once marked, press a-s or enter 'macro sumblock'. The sum of all   *
*         the numbers displays in the message area.                          *
******************************************************************************
* Legal Stuff:
*
* MIT License
* Copyright (c) 2024 Gordon, M.D. https://gofund.me/a04e971f  
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:

* The above copyright notice, and this permission notice shall be included in all* 
* copies or substantial portions of the Software.

* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
ARG STARTCOL LENGTH
'cursor cmdline'
curlineno = line.1()

TOT = 0
if block.1() \= "BOX" then
do
   "MSG BOX block required for SUMBLOCK."
   exit
end

start_row = block.2()
start_col = block.3()
end_row = block.4()
end_col = block.5()

sum = 0
out_of_scope = 0
non_numeric  = 0
do row = start_row to end_row
   "NOMSG LOCATE :"row
   if (rc = 0) then
   do
      value = substr(curline.3(), start_col, (end_col - start_col + 1))
      value = strip(value, "L")
      value = strip(value, "L", "$")
      if pos("-", value) > 0 then
      do
         value = strip(value, "B", "-")
         negative = 1
      end
      else
         negative = 0
      if datatype(value, "N") then
      do
         if negative then value = 0 - value
         sum = sum + value
      end
      else
         non_numeric = non_numeric + 1
   end
   else
      out_of_scope = out_of_scope + 1
end
non_numeric_msg = ""
out_of_scope_msg = ""
if non_numeric > 0 then
   non_numeric_msg = "," non_numeric "lines not numeric"
if out_of_scope > 0 then
   out_of_scope_msg = "," out_of_scope "lines out of scope"

"NOMSG LOCATE :"curlineno
"msg" 'Sumblock: sum='SUM || out_of_scope_msg || non_numeric_msg"."
exit
